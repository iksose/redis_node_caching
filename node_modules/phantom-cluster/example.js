// Generated by CoffeeScript 1.6.3
(function() {
  var WEBSITES, cluster, enqueueRequests, main, phantomCluster;

  phantomCluster = require("./index");

  cluster = require("cluster");

  WEBSITES = {
    "http://www.themuse.com/": "The Muse - Career advice and better job search",
    "http://www.themuse.com/companies": "Companies | The Muse",
    "http://www.themuse.com/jobs": "Jobs | The Muse",
    "http://www.themuse.com/developers": "The Muse - Career advice and better job search"
  };

  enqueueRequests = function(engine) {
    var enqueuer, fulfilled, i, key, _i, _results;
    fulfilled = 0;
    enqueuer = function(request) {
      var item;
      item = engine.enqueue(request);
      item.on("timeout", function() {
        console.log("# Queue item timed out, re-enqueueing " + item.id);
        return enqueuer(request);
      });
      return item.on("response", function() {
        console.log("# Response");
        if (WEBSITES[item.request] !== item.response) {
          throw new Error("Unexpected response for " + item.request + ": " + item.response);
        }
        fulfilled += 1;
        if (fulfilled === 16) {
          return process.nextTick(function() {
            return engine.stop();
          });
        }
      });
    };
    _results = [];
    for (i = _i = 0; _i < 4; i = ++_i) {
      _results.push((function() {
        var _results1;
        _results1 = [];
        for (key in WEBSITES) {
          _results1.push(enqueuer(key));
        }
        return _results1;
      })());
    }
    return _results;
  };

  main = function() {
    var engine;
    engine = phantomCluster.createQueued({
      workers: 4,
      workerIterations: 4,
      phantomBasePort: 12345
    });
    if (cluster.isMaster) {
      enqueueRequests(engine);
    }
    engine.on("workerStarted", function(worker) {
      return console.log("# Worker started: " + worker.id);
    });
    engine.on("workerDied", function(worker) {
      return console.log("# Worker died: " + worker.id);
    });
    engine.on("started", function() {
      return console.log("# Started");
    });
    engine.on("stopped", function() {
      return console.log("# Stopped");
    });
    engine.on("phantomStarted", function() {
      return console.log("# Phantom instance started");
    });
    engine.on("phantomDied", function() {
      return console.log("# Phantom instance died");
    });
    engine.on("queueItemReady", function(url) {
      var _this = this;
      console.log("# Ready to process " + url);
      return this.ph.createPage(function(page) {
        return page.open(url, function(status) {
          return page.evaluate((function() {
            return document.title;
          }), function(result) {
            console.log("# Finished request for " + url + ": " + result);
            return _this.queueItemResponse(result);
          });
        });
      });
    });
    return engine.start();
  };

  main();

}).call(this);
